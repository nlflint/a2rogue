Player uses:
    t_flags
    hero t_pos
    pstats t_stats
    pack t_pack
    
    Follup: save_throw
    
Monster feature:

Add monsters to room:
    start a monster chars array
    copy monsters to level (for now)
    monster structs go in master array
    mlist is a list of pointers
    No more linked lists, statically allocated array
    How many monsters to allow?
    Monster struct size: 28 bytes
    things are 25 bytes
    new_item becomes new_monster
    implement clear monsters
    
    

Renaming:
    new_thing is really new object
    object struct is really a beast/monster
    thing struct is fine
    monster struct is a beast/monster type

Questions:
    How are dark rooms erased.
    How does hero light up around him
    
Things and objects:
Facts:
    There are 9 rooms
    There can be 1 monster per room to start
    Wanderers are spawned ~70 moves
    
    30 monster limit?  20 * 28 bytes = 560 bytes
    
    Hero can hold 23 items
    monsters can hold 1 item
    1 thing can spawn in every room
    traps can spawn darts
    
    50 thing limit? 50 * 25 bytes =  1250 bytes
    2k for items and monsters?
    
    
    
 Jan 27th:
 Total space seems to be at ~22.5k (code and window data, which is big @~10k).
 Some ideas to clear up space:
    Don't utilize a help window, redraw it each time.
    Don't utilize a monster window, look them up each time by searching a collection.
    Remove terse mode.
    Move window data to HIMEM
    
Projecting space used based on passages.c = 10bytes per line of code:
    Armor = 830
    command = 6500
    daemon = 1900
    daemons = 1600
    fight 7200
    
 
 
    
    
Feb 20th:
Observations:
    Latest size is: 28892 bytes (~16k program code, ~10k data, ~2k init code)
    Greatest possible program size is: 36351 bytes
    Remaining: 7459 bytes
    Stack default: 2048 bytes
    RAM configured to end at 38400 bytes
    So: 38400 - 2051(start address) - 2048(stack) - 36351(max prog size)


Ideas to save space:
    Can share items between inventory and rooms using a stack/buffer combo.
    Move himem to 0xBEFF (Adds 10k, new total is 45.5k code possible )
    Remove help window (saves 1-2k)
    Move stack and BCC to language card (Saves ~10k)
    Reduce stack size: (Adds ~1k)
    

    Less desirable:
    Reduce resolution (saves 2-4k)
    Remove monster window. Lookup monsters via location instead (saves 1-2K)
    
